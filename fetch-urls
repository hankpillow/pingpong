#!/bin/bash

ROOT="${0%/*}"
URL_LIST=$ROOT/URLS
TARGET_ERROR=$ROOT/logs/errors.json
TARGET_SUCCESS=$ROOT/logs/samples.json

[[ $CURL_FOLLOW_LINKS == 0 ]] && FOLLOW="" || FOLLOW=" -L "

if [[ ! -f $TARGET_SUCCESS ]]; then echo "[]" > $TARGET_SUCCESS; fi
if [[ ! -f $TARGET_ERROR ]]; then echo "[]" > $TARGET_ERROR; fi

logerror () {

	ERROR=$(echo "{\"date\":\"$(date +%F_%T)\",\"url\":\"$1\",\"error_code\":\"$2\"}" | jq -r -c '.')
	if [[ $? == 0 ]]; then

    rm -f cmd.tmp
    echo ". |= . + [\$error] | .[-$MAX_ERRORS:]" > cmd.tmp
    LIST=$(cat $TARGET_ERROR | jq -r -c --argjson error $ERROR -f cmd.tmp)

    if [[ $? == 0 ]]; then
      echo "$LIST" > "$TARGET_ERROR"
    else
      echo "# [pingpong] jq couldnt append the error on the list"
    fi

  else
		echo "# [pingpong] jq couldnt parse the error sample"
    echo "# $ERROR"
	fi
}

if [[ ! -f $URL_LIST ]]; then
	logerror "missing URL file" "e0"
	exit 1
fi

echo "# [Pingpong will start fetching pages]"
echo "# * urls from: $URL_LIST"
echo "# * samples at: $TARGET_SUCCESS"
echo "# * errors at: $TARGET_ERROR"

while read -r url; do

	URL=$(echo "$url" | awk '{print $1}')
	USER=$(echo "$url" | awk '{print $2}')

	[[ ! -z $USER ]] && LOGIN=" -u $USER" || LOGIN=""

	# only urls starting with http(s):// will be tested.
	if [[ $URL =~ ^https?:// ]]; then

    printf "%s" "# $(date +%F_%T) $URL: "
		RESULT=$(curl $URL -w "@$ROOT/curl-parse-result" $FOLLOW $LOGIN --insecure \
			--max-time $CURL_TIMEOUT --compressed -I --silent -o /dev/null \
			-H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36')
    EXIT_CODE=$?

		if [[ $EXIT_CODE == 0 ]]; then

			# append date into sample object
			SAMPLE="$(echo $RESULT | jq -r -c --arg date "$(date +%F_%T)" '.date |= . + $date ' )"

			if [[ $? == 0 ]]; then

        rm -f cmd.tmp
        echo ". |= . + [\$sample] | .[-$MAX_SAMPLES:]" > cmd.tmp
        LIST=$(cat "$TARGET_SUCCESS" | jq -r -c --argjson sample $SAMPLE -f cmd.tmp)

				if [[ ! $? == 0 ]]; then
					logerror "jq couldnt append the sample on the list" "e1"
        else
          echo "$LIST" > "$TARGET_SUCCESS"
          echo "ok"
				fi

			else
				logerror "jq couldnt append date or parse the given input" "e2"
			fi

		else
			logerror $URL "$EXIT_CODE"
			echo "error"
		fi

	fi

done < "$URL_LIST"

echo "# [done samples:$(cat $TARGET_SUCCESS | jq '. | length') errors:$(cat $TARGET_ERROR | jq '. | length')]"

rm -f cmd.tmp
exit 0
